<#@ Template Language="C#" HostSpecific="True" Inherits="DynamicTransform" #>
<#@ Output extension="cshtml" encoding="utf-8"#>
<#@ assembly name="System.ComponentModel.DataAnnotations" #>
<#@ assembly name="System.Core" #>
<#@ assembly name="System.Data.Entity" #>
<#@ assembly name="System.Data.Linq" #>
<#@ import namespace="System" #>
<#@ import namespace="System.Collections" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="System.ComponentModel.DataAnnotations" #>
<#@ import namespace="System.Data.Linq.Mapping" #>
<#@ import namespace="System.Data.Objects.DataClasses" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Reflection" #>
<#@ import namespace="EnvDTE" #>
<# var viewDataType = (EnvDTE.CodeType) Model.ViewDataType; 
   var relatedEntities = ((IEnumerable)Model.RelatedEntities).OfType<RelatedEntityInfo>()
			.Where(x => x.RelationType == RelationType.Parent)
			.Where(x => !Model.FkName.StartsWith(x.RelationName));
	
   var modelType = (CodeType)Model.ModelType;
   var modelName = modelType.Name;
   var modelNamePlural = Model.ModelTypePluralized; 
   var modelVariable = Char.ToLower(modelName[0]) + modelName.Substring(1); 
   var fkName = Char.ToLower(Model.FkName[0]) + Model.FkName.Substring(1);#>
@model <#= viewDataType.FullName #>
@{
	var ajaxOptions = new AjaxOptions()
    {
        HttpMethod = "POST",
        InsertionMode = InsertionMode.Replace,
        UpdateTargetId = "<#=modelVariable#>",
        OnBegin = "<#=modelName#>OnBegin",
        OnComplete = "<#=modelName#>OnComplete",
        OnFailure = "<#=modelName#>OnFailure",
        OnSuccess = "<#=modelName#>OnSuccess"
    };
}

<div class="row form-group">
    <div class="col-md-12 col-xs-6">
		<dl>
<#
	List<ModelProperty> temp = GetModelProperties(Model.ViewDataType, false);
	var properties = temp.Where(a=> a.Name != "Ativo" && a.Name != "DataHoraCad" && a.Name != "UsuarioCad");

foreach (ModelProperty property in properties) {
    if (!property.IsPrimaryKey && !property.IsForeignKey && !property.IsReadOnly) {
#>
			<dt>
				@Html.DisplayNameFor(model => model.<#= property.Name #>)
			</dt>
			<dd>
				@Html.DisplayFor(model => model.<#= property.Name #>)
			</dd>
<#
    }
}
#>			
		</dl>
    </div>
</div>

<div class="row form-group">
    <div class="col-md-12 col-xs-6">
		@using (Ajax.BeginForm("ExcluirPartial", "<#=Model.ControllerName#>", ajaxOptions))
		{
			@Html.AntiForgeryToken()

			<div class="row form-group">
				<div class="col-lg-12">
					@Ajax.RawActionLink("<i class=\"fa fa-arrow-left fa-fw\"></i> Cancelar", "CancelarPartial", "<#=Model.ControllerName#>", new { <#=fkName#> = Model.<#=Model.FkName#> }, ajaxOptions, new { @class= "btn btn-default" })            
					<button type="submit" class="btn btn-primary"><i class="fa fa-trash fa-fw"></i> Excluir</button>
				</div>
			</div>
		}		
    </div>
</div>
@Html.Partial("_Scripts")
<#@ include file="ModelMetadataFunctions.cs.include.t4" #>